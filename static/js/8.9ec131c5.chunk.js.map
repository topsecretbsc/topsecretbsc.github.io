{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","hooks/useBlock.ts","utils/erc20.ts","components/UnlockButton.tsx","hooks/useApprove.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/TokenInput/TokenInput.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useUnstake.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/Syrup.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useBlock","BlockContext","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","UnlockButton","props","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","useAllowance","useState","isApproved","setIsApproved","block","useEffect","then","x","isGreaterThan","useApprove","amount","dispatch","useDispatch","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","console","error","useContractApprove","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","StyledSpacer","styled","div","size","Spacer","s","spacing","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","useSousHarvest","soushHarvest","updateUserPendingReward","updateUserBalance","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","primary","StyledTokenSymbol","span","TokenInput","max","symbol","onChange","onSelectMax","value","depositFeeBP","TranslateString","toLocaleString","Input","endAdornment","placeholder","times","toString","useStake","onStake","stake","info","useSousStake","sousStake","updateUserStakedBalance","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useSousUnstake","onUnstake","sousUnstake","useUnstake","unstake","StyledLabel","isFinished","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","useRef","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","variant","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","card","background","isActive","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","href","to","buttonColor","ButtonChild","target","boxShadow","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","CardFooter","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","style","marginBottom","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","stakingTokenContract","useERC20","requestedApproval","setRequestedApproval","stakingTokenBalance","stakedBalance","pendingReward","Math","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","display","alignItems","HarvestButton","flex","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","QuoteToken","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Flex","mb","textAlign","exact"],"mappings":"oJAGMA,EAAgB,UASTC,EAAiB,SAACC,EAA0BC,EAAuBC,GAC9E,IAAMC,EAAmBH,EAAaI,MAAK,SAACC,GAC1C,OAAOA,EAAYC,KAAKC,WAAaN,KAEvC,GAAIE,EAAkB,CACpB,IAAMK,EAAmBL,EAAiBG,KAAKG,KAE/C,OADyBD,EAAiBE,SAAS,KAb1B,SAACP,EAA0BD,GACtD,IAAMS,EAAkBb,EAAcc,KAAKT,GAAkB,GAEvDU,EAAuBX,EAASY,MAAM,KAAK,GACjD,OAAOX,EAAiBY,QAAQJ,EAAiBE,GAWtCG,CAAqBR,EAAkBN,GAEzCM,EAET,OAAON,GCNMe,IAdC,WAAO,IACbjB,EAAiBkB,qBAAWC,KAA5BnB,aAER,OAAO,SAACC,EAAuBC,GAC7B,MAAwB,UAApBF,EAAa,GACRE,EAELF,EAAaoB,OAAS,EACjBrB,EAAeC,EAAcC,EAAeC,GAE9CA,K,iCCdX,yFAEamB,EAAmB,SAACC,GAAuC,IAAnBC,EAAkB,uDAAP,GACxDC,EAAiB,IAAIC,IAAUH,GAASI,UAAU,IAAID,IAAU,IAAIE,IAAIJ,IAC9E,OAAOC,EAAeI,YAOXC,EAAwB,SAACP,GAAuC,IAAnBC,EAAkB,uDAAP,GACnE,OAAOD,EAAQI,UAAU,IAAID,IAAU,IAAIE,IAAIJ,IAAWO,Y,iCCZ5D,oBAQeC,IALE,WAEf,OADsBb,qBAAWc,O,4LCEtBC,EAAc,SAACC,EAAwBC,GAGlD,OADiB,IADJ,IAAIC,IAAKF,GACIG,IAAIC,UAAUC,EAA8BJ,IAI3DK,EAAY,uCAAG,WAC1BC,EACAC,EACAC,GAH0B,eAAAC,EAAA,+EAMQH,EAAWI,QAAQC,UAAUH,EAASD,EAAmBK,QAAQZ,SAASa,OANlF,cAMlBF,EANkB,yBAOjBA,GAPiB,yDASjB,KATiB,yDAAH,0DAaZG,EAAe,uCAAG,WAC7Bf,EACAgB,EACAC,GAH6B,iBAAAP,EAAA,6DAKvBQ,EAAWnB,EAAYC,EAAUgB,GALV,kBAOGE,EAASP,QAAQQ,UAAUF,GAAaH,OAP3C,cAOrB1B,EAPqB,yBAQpBA,GARoB,yDAUpB,KAVoB,yDAAH,2D,2ECVbgC,IAXM,SAACC,GAAW,IAAD,EACHC,cAAnBC,EADsB,EACtBA,QAASC,EADa,EACbA,MACTC,EAA0BC,yBAAeH,EAASC,GAAlDC,sBAER,OACE,cAAC,SAAD,yBAAQE,QAASF,GAA2BJ,GAA5C,kC,2SCGSO,EAAe,SAACrB,EAAsBW,GAAwB,IAAD,EACpCW,oBAAS,GAD2B,mBACjEC,EADiE,KACrDC,EADqD,KAEhEtB,EAAiCa,cAAjCb,QACFuB,EAAQnC,cAWd,OATAoC,qBAAU,WACJH,GACJxB,YAAaC,EAAYW,EAAUT,GAASyB,MAAK,SAACC,GAChD,GAAK1B,EAAL,CACA,IAAMG,EAAY,IAAIrB,IAAU4C,GAChCJ,EAAcnB,GAAaA,EAAUwB,cAAc,UAEpD,CAAC3B,EAASS,EAAUX,EAAYyB,EAAOF,IAEnCA,GAGIO,EAAa,SAAC9B,EAAsB+B,GAC/C,IAAMC,EAAWC,cACT/B,EAAiCa,cAAjCb,QACFD,EAAqBiC,cAe3B,MAAO,CAAEC,UAdaC,sBAAW,sBAAC,4BAAAjC,EAAA,+EAEbkC,YAAQrC,EAAYC,EAAoBC,EAAS6B,GAFpC,cAExBO,EAFwB,OAIzBP,GACHC,EAASO,YAAuBrC,IALJ,kBAOvBoC,GAPuB,uCAS9BE,QAAQC,MAAR,MAT8B,mBAUvB,GAVuB,yDAY/B,CAACvC,EAAS8B,EAAUhC,EAAYC,EAAoB8B,MAK5CW,EAAqB,SAAC1C,EAAsBW,GAAwB,IACvET,EAAiCa,cAAjCb,QAUR,MAAO,CAAEiC,UATaC,sBAAW,sBAAC,sBAAAjC,EAAA,+EAEjBkC,YAAQrC,EAAYW,EAAUT,GAFb,+EAI9BsC,QAAQC,MAAR,MAJ8B,mBAKvB,GALuB,yDAO/B,CAACvC,EAASF,EAAYW,MAMdgC,EAAiB,SAAC3C,EAAsB4C,GACnD,IAAMZ,EAAWC,cACT/B,EAAiCa,cAAjCb,QACF2C,EAAmBC,YAAYF,GAYrC,MAAO,CAAET,UAVaC,sBAAW,sBAAC,4BAAAjC,EAAA,+EAEbkC,YAAQrC,EAAY6C,EAAkB3C,GAFzB,cAExBoC,EAFwB,OAG9BN,EAASe,YAAoBH,EAAQ1C,IAHP,kBAIvBoC,GAJuB,0DAMvB,GANuB,yDAQ/B,CAACpC,EAAS8B,EAAUhC,EAAY6C,EAAkBD,O,sNCvEvD,IAuBMI,EAAeC,IAAOC,IAAV,KACN,SAACpC,GAAD,OAAWA,EAAMqC,QAClB,SAACrC,GAAD,OAAWA,EAAMqC,QAGbC,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDG,EAAY7E,qBAAW8E,KAAvBD,QAGR,OAAQH,GACN,IAAK,KACHE,EAAIC,EAAQ,GACZ,MACF,IAAK,KACHD,EAAIC,EAAQ,GACZ,MACF,IAAK,KACL,QACED,EAAIC,EAAQ,GAGhB,OAAO,cAACN,EAAD,CAAcG,KAAME,K,wRClB7B,IAcMG,EAAqBP,IAAOC,IAAV,KAEF,SAACpC,GAAD,OAAWA,EAAM2C,MAAMC,OAAOC,eAGvC,SAAC7C,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAGtCM,EAAoBX,IAAOC,IAAV,KAKRW,EA3BgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUnF,OAC3C,OACE,cAAC6E,EAAD,UACGQ,IAAMC,SAASE,IAAIL,GAAU,SAACM,EAAOC,GAAR,OAC5B,qCACE,cAACT,EAAD,UAAoBQ,IACnBC,EAAIN,EAAI,GAAK,cAAC,EAAD,c,sOCJXO,EAAa,SAACC,GACzB,IAAMvC,EAAWC,cACT/B,EAAYa,cAAZb,QACFD,EAAqBiC,cAQ3B,MAAO,CAAEsC,SANapC,sBAAW,sBAAC,4BAAAjC,EAAA,sEACXsE,YAAQxE,EAAoBsE,EAASrE,GAD1B,cAC1BwE,EAD0B,OAEhC1C,EAASO,YAAuBrC,IAFA,kBAGzBwE,GAHyB,2CAI/B,CAACxE,EAAS8B,EAAUuC,EAAStE,MAKrB0E,EAAgB,SAACC,GAAwB,IAC5C1E,EAAYa,cAAZb,QACFD,EAAqBiC,cAU3B,MAAO,CAAEsC,SARapC,sBAAW,sBAAC,4BAAAjC,EAAA,6DAC1B0E,EAAkBD,EAASE,QAAO,SAACC,EAAOC,GAC9C,MAAM,GAAN,mBAAWD,GAAX,CAAkBN,YAAQxE,EAAoB+E,EAAK9E,OAClD,IAH6B,kBAKzB+E,QAAQC,IAAIL,IALa,2CAM/B,CAAC3E,EAAS0E,EAAU3E,MAKZkF,EAAiB,SAACvC,GAC7B,IAAMZ,EAAWC,cACT/B,EAAYa,cAAZb,QACF2C,EAAmBC,YAAYF,GAQrC,MAAO,CAAE4B,SANapC,sBAAW,sBAAC,sBAAAjC,EAAA,sEAC1BiF,YAAavC,EAAkB3C,GADL,OAEhC8B,EAASqD,YAAwBzC,EAAQ1C,IACzC8B,EAASsD,YAAkB1C,EAAQ1C,IAHH,2CAI/B,CAACA,EAAS8B,EAAUa,EAAkBD,O,wtBChC3C,IAoCM2C,EAAmBtC,IAAOC,IAAV,KAEhBF,EAAeC,IAAOC,IAAV,KACP,SAACpC,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAGpCkC,EAA8BvC,IAAOC,IAAV,KAK3BuC,EAAgBxC,IAAOC,IAAV,KAER,SAACpC,GAAD,OAAWA,EAAM2C,MAAMC,OAAOgC,WAQnCC,EAAoB1C,IAAO2C,KAAV,KACZ,SAAC9E,GAAD,OAAWA,EAAM2C,MAAMC,OAAOgC,WAI1BG,EA9D+B,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,IAAKC,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAA8B,IAAvBC,oBAAuB,MAAR,EAAQ,EAC3GC,EAAkB5H,cACxB,OACE,eAAC+G,EAAD,WACE,eAACE,EAAD,WACGK,EAAIO,iBADP,IAC0BN,EAD1B,IACmCK,EAAgB,IAAK,gBAExD,cAACE,EAAA,EAAD,CACEC,aACE,eAACf,EAAD,WACE,cAACG,EAAD,UAAoBI,IACpB,cAAC/C,EAAD,IACA,8BACE,cAAC,SAAD,CAAQG,KAAK,KAAK/B,QAAS6E,EAA3B,SACGG,EAAgB,IAAK,cAK9BJ,SAAUA,EACVQ,YAAY,IACZN,MAAOA,IAGPC,EAAe,EACb,eAACV,EAAD,WACGW,EAAgB,MAAO,eAD1B,KAC4C,IAAIpH,IAAUkH,GAAS,GAAGO,MAAMN,EAAa,KAAOO,WADhG,IAC6GX,KAG7G,U,4LCnCGY,EAAW,SAAC3B,GACvB,IAAMhD,EAAWC,cACT/B,EAAYa,cAAZb,QACFD,EAAqBiC,cAW3B,MAAO,CAAE0E,QATWxE,sBAAW,uCAC7B,WAAOL,GAAP,eAAA5B,EAAA,sEACuB0G,YAAM5G,EAAoB+E,EAAKjD,EAAQ7B,GAD9D,OACQwE,EADR,OAEE1C,EAASO,YAAuBrC,IAChCsC,QAAQsE,KAAKpC,GAHf,2CAD6B,sDAM7B,CAACxE,EAAS8B,EAAU/B,EAAoB+E,MAmB/B+B,EAAe,SAACnE,GAC3B,IAAMZ,EAAWC,cACT/B,EAAYa,cAAZb,QACF2C,EAAmBC,YAAYF,GAWrC,MAAO,CAAEgE,QATWxE,sBAAW,uCAC7B,WAAOL,GAAP,SAAA5B,EAAA,sEACQ6G,YAAUnE,EAAkBd,EAAQ7B,GAD5C,OAEE8B,EAASiF,YAAwBrE,EAAQ1C,IACzC8B,EAASsD,YAAkB1C,EAAQ1C,IAHrC,2CAD6B,sDAM7B,CAACA,EAAS8B,EAAUa,EAAkBD,O,iCCjD1C,+CAEA5D,IAAUkI,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGY,IAAIpI,IAAU,GAArC,IACMqI,EAAkB,IAAIrI,IAAU,U,mTCN7C,IAAMsI,E,KAAarE,EAAOC,IAAV,KAaDoE,O,0JCSFC,EAAiB,SAAC3E,GAC7B,IAAMZ,EAAWC,cACT/B,EAAYa,cAAZb,QACF2C,EAAmBC,YAAYF,GAarC,MAAO,CAAE4E,UAXapF,sBAAW,uCAC/B,WAAOL,GAAP,SAAA5B,EAAA,sEACQsH,YAAY5E,EAAkBd,EAAQ7B,GAD9C,OAGE8B,EAASiF,YAAwBrE,EAAQ1C,IACzC8B,EAASsD,YAAkB1C,EAAQ1C,IACnC8B,EAASqD,YAAwBzC,EAAQ1C,IAL3C,2CAD+B,sDAQ/B,CAACA,EAAS8B,EAAUa,EAAkBD,MAM3B8E,IAnCI,SAAC1C,GAClB,IAAMhD,EAAWC,cACT/B,EAAYa,cAAZb,QACFD,EAAqBiC,cAU3B,MAAO,CAAEsF,UARapF,sBAAW,uCAC/B,WAAOL,GAAP,SAAA5B,EAAA,sEACQwH,YAAQ1H,EAAoB+E,EAAKjD,EAAQ7B,GADjD,OAEE8B,EAASO,YAAuBrC,IAFlC,2CAD+B,sDAK/B,CAACA,EAAS8B,EAAU/B,EAAoB+E,O,8YCV5C,IAIM4C,EAAc3E,IAAOC,IAAV,KACN,gBAAG2E,EAAH,EAAGA,WAAH,SAAepE,MAAkBC,OAAOmE,EAAa,eAAiB,cAIlEC,EATqB,SAAC,GAAD,IAAG9J,EAAH,EAAGA,KAAH,IAAS6J,kBAAT,gBAClC,cAACD,EAAD,CAAaC,WAAYA,EAAzB,SAAsC7J,K,8JCQxC,IAAM+J,EAAa9E,YAAO+E,OAAP/E,CAAH,KACL,gBAAGgF,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAOzE,EAAtB,EAAsBA,MAAtB,OAAmCwE,EAAaxE,EAAMC,OAAOyE,aAAeD,KAGjFE,EAAkC,SAAC,GAA4D,IAA1DlC,EAAyD,EAAzDA,MAAOmC,EAAkD,EAAlDA,SAAUH,EAAwC,EAAxCA,MAAOpJ,EAAiC,EAAjCA,SAAUmJ,EAAuB,EAAvBA,WAAYK,EAAW,EAAXA,KACjFC,EAAgBC,iBAAO,GAM7B,OAJA9G,qBAAU,WACR6G,EAAcE,QAAUvC,IACvB,CAACA,IAGF,eAAC6B,EAAD,CAAYW,MAAI,EAACR,MAAOA,EAAOG,SAAUA,EAAUJ,WAAYA,EAA/D,UACE,cAAC,IAAD,CAASU,MAAOJ,EAAcE,QAASG,IAAK1C,EAAOpH,SAAUA,EAAU+J,SAAU,EAAGC,UAAU,MAC7F5C,GAASoC,GAAQ,+BAAOA,QAK/BF,EAAQW,aAAe,CACrBV,SAAU,OACVJ,YAAY,EACZC,MAAO,OACPpJ,SAAU,GAGGsJ,Q,kBCqBAY,EAjDmC,SAAC,GAAmD,IAAjDlD,EAAgD,EAAhDA,IAAKmD,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,IAArBC,iBAAqB,MAAT,GAAS,IAC7E7H,mBAAS,IADoE,mBAC5F8H,EAD4F,KACvFC,EADuF,OAEjE/H,oBAAS,GAFwD,mBAE5FgI,EAF4F,KAEjFC,EAFiF,KAG7FnD,EAAkB5H,cAClBgL,EAAcC,mBAAQ,WAC1B,OAAOrK,YAAsB0G,KAC5B,CAACA,IAEE4D,EAAetH,uBACnB,SAACuH,GACCN,EAAOM,EAAEC,cAAc1D,SAEzB,CAACmD,IAGGQ,EAAkBzH,uBAAY,WAClCiH,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,QAAD,CAAOS,MAAK,UAAK1D,EAAgB,IAAK,WAA1B,YAAwC+C,EAAxC,WAA4DD,UAAWA,EAAnF,UACE,cAACrD,EAAA,EAAD,CACEK,MAAOkD,EACPnD,YAAa4D,EACb7D,SAAU0D,EACV5D,IAAK0D,EACLzD,OAAQoD,IAEV,eAACtF,EAAA,EAAD,WACE,cAAC,SAAD,CAAQkG,WAAS,EAACC,QAAQ,YAAY5I,QAAS8H,EAA/C,SACG9C,EAAgB,IAAK,YAExB,cAAC,SAAD,CACE2D,WAAS,EACTE,SAAUX,EACVlI,QAAO,sBAAE,sBAAAjB,EAAA,6DACPoJ,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAHX,SAUGI,EAAYlD,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCM5E8D,EAhDqC,SAAC,GAAmD,IAAjDjB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWpD,EAA0B,EAA1BA,IAA0B,IAArBqD,iBAAqB,MAAT,GAAS,IAC/E7H,mBAAS,IADsE,mBAC9F8H,EAD8F,KACzFC,EADyF,OAEnE/H,oBAAS,GAF0D,mBAE9FgI,EAF8F,KAEnFC,EAFmF,KAG/FnD,EAAkB5H,cAClBgL,EAAcC,mBAAQ,WAC1B,OAAOrK,YAAsB0G,KAC5B,CAACA,IAEE4D,EAAetH,uBACnB,SAACuH,GACCN,EAAOM,EAAEC,cAAc1D,SAEzB,CAACmD,IAGGQ,EAAkBzH,uBAAY,WAClCiH,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,QAAD,CAAOS,MAAK,mBAAcX,GAAaD,UAAWA,EAAlD,UACE,cAACrD,EAAA,EAAD,CACEI,YAAa4D,EACb7D,SAAU0D,EACVxD,MAAOkD,EACPtD,IAAK0D,EACLzD,OAAQoD,IAEV,eAACtF,EAAA,EAAD,WACE,cAAC,SAAD,CAAQmG,QAAQ,YAAY5I,QAAS8H,EAArC,SACG9C,EAAgB,IAAK,YAExB,cAAC,SAAD,CACE6D,SAAUX,EACVlI,QAAO,sBAAE,sBAAAjB,EAAA,6DACPoJ,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAFX,SASGI,EAAYlD,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oB,qKCxC3F,IAqCe+D,EArCoC,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUnB,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,IAArBC,iBAAqB,MAAT,GAAS,IACvE7H,oBAAS,GAD8D,mBAClGgI,EADkG,KACvFC,EADuF,KAEnGnD,EAAkB5H,cAClBgL,EAAcC,mBAAQ,WAC1B,OAAOrK,YAAsBgL,KAC5B,CAACA,IAEJ,OACE,eAAC,QAAD,CACEN,MAAK,UAAK1D,EAAgB,IAAK,YAA1B,YAAyCA,EAAgB,IAAD,UAAS+C,EAAT,aAC7DD,UAAWA,EAFb,UAIE,cAACmB,EAAD,UACE,cAAC,EAAD,CAASnE,MAAOoE,OAAOd,OAEzB,eAAC3F,EAAA,EAAD,WACE,cAAC,SAAD,CAAQkG,WAAS,EAACC,QAAQ,YAAY5I,QAAS8H,EAA/C,SACG9C,EAAgB,IAAK,YAExB,cAAC,SAAD,CACEmE,GAAG,gBACHR,WAAS,EACTE,SAAUX,EACVlI,QAAO,sBAAE,sBAAAjB,EAAA,6DACPoJ,GAAa,GADN,SAEDN,EAAUO,GAFT,OAGPD,GAAa,GACbL,IAJO,2CAJX,SAWGI,EAAYlD,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBASrFiE,EAAapH,IAAOC,IAAV,K,4KCjDhB,IAQesH,EARGvH,IAAOC,IAAV,KACJ,gBAAG2E,EAAH,EAAGA,WAAH,SAAepE,MAAkBC,OAAOmE,EAAa,eAAiB,W,sTCLjF,IAce4C,EAdFxH,IAAOC,IAAV,KACM,SAACpC,GAAD,OAAWA,EAAM2C,MAAMiH,KAAKC,cAIjC,gBAAG9C,EAAH,EAAGA,WAAH,SAAepE,MAAkBC,OAAOmE,EAAa,eAAiB,gBACjE,qBAAG+C,SAEX,oEACA,iF,y+BCKR,IAiEMC,GAAe5H,IAAO6H,OAAV,MAEF,SAAChK,GAAD,OAAaA,EAAMmJ,SAAP,OAAkBnJ,EAAM2C,MAAMiH,KAAKC,cAEpD,SAAC7J,GAAD,OAAaA,EAAMmJ,SAAP,uBAGR,SAACnJ,GAAD,OAAWA,EAAMuH,YAEpB,SAACvH,GAAD,OAAWA,EAAMqC,QAGX,SAACrC,GAAD,OAAWA,EAAMiK,WAChB,SAACjK,GAAD,OAAWA,EAAMiK,WAChB,SAACjK,GAAD,OAAaA,EAAMmJ,SAAuB,YAAZe,KAE5B,SAAClK,GAAD,OAAaA,EAAMmJ,SAAP,oBAO5BgB,GAAahI,YAAOiI,KAAPjI,CAAH,MAOF,SAACnC,GAAD,OAAYA,EAAM2C,MAAMH,QAAQ,MAC/B,SAACxC,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAIxC6H,GAAqBlI,IAAO9C,EAAV,MAOV,SAACW,GAAD,OAAYA,EAAM2C,MAAMH,QAAQ,MAC/B,SAACxC,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAI/B8H,GAhHuB,SAAC,GAA2D,IAK5FC,EACAC,EACAjD,EAPmCvE,EAAwD,EAAxDA,SAAUmG,EAA8C,EAA9CA,SAAUsB,EAAoC,EAApCA,KAAMnK,EAA8B,EAA9BA,QAAS+B,EAAqB,EAArBA,KAAMnF,EAAe,EAAfA,KAAMwN,EAAS,EAATA,GAAS,EACnE/M,qBAAW8E,KAA/BG,EADuF,EACvFA,OAAQJ,EAD+E,EAC/EA,QACVmI,EAAc/H,EAAOiH,WAM3B,OAAQxH,GACN,IAAK,KACHmI,EAAgBhI,EAAQ,GACxB+H,EAAa,GACbhD,EAAW,GACX,MACF,IAAK,KACHiD,EAAgBhI,EAAQ,GACxB+H,EAAa,GACbhD,EAAW,GACX,MACF,IAAK,KACL,QACEiD,EAAgBhI,EAAQ,GACxB+H,EAAa,GACbhD,EAAW,GAGf,IAAMqD,EAAcjC,mBAAQ,WAC1B,OAAI+B,EACK,cAACP,GAAD,CAAYO,GAAIA,EAAhB,SAAqBxN,IAE1BuN,EAEA,cAACJ,GAAD,CAAoBI,KAAMA,EAAMI,OAAO,UAAvC,SACG3N,IAIAA,IACN,CAACuN,EAAMvN,EAAMwN,IAEhB,OACE,eAACX,GAAD,CACEe,UAtCAA,UAuCA1D,MAAOuD,EACPxB,SAAUA,EACV5B,SAAUA,EACVjH,QAASA,EACT2J,QAASO,EACTnI,KAAMkI,EAPR,UASGvH,EACA4H,M,s7BCrDP,IAAMG,GAAe5I,IAAOC,IAAV,MAEP,gBAAG2E,EAAH,EAAGA,WAAH,SAAepE,MAAkBC,OAAOmE,EAAa,gBAAkB,eAI5EiE,GAAsB7I,IAAO6H,OAAV,MAId,SAAChK,GAAD,OAAWA,EAAM2C,MAAMC,OAAOgC,WAkBnCqG,GAAU9I,IAAOC,IAAV,MAIP8I,GAAM/I,IAAOC,IAAV,MAKH+I,GAAWhJ,IAAOC,IAAV,MAGR4E,GAAQ7E,IAAOC,IAAV,MAILgJ,GAA8B,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,gBAAiBvE,EAAmC,EAAnCA,WAAYwE,EAAuB,EAAvBA,iBAAuB,EAC1E/K,oBAAS,GADiE,mBAC/FgL,EAD+F,KACvFC,EADuF,KAEhGC,EAAOF,EAASG,KAAYC,KAIlC,OACE,eAACb,GAAD,CAAchE,WAAYA,EAA1B,UACE,cAACmE,GAAD,UACE,eAACF,GAAD,CAAqB1K,QALP,kBAAMmL,GAAWD,IAK/B,UACGA,EAAS,OAAS,UADrB,IACgC,cAACE,EAAD,SAGjCF,GACC,eAACP,GAAD,WACE,eAACC,GAAD,CAAKW,MAAO,CAAEC,aAAc,OAA5B,UACE,cAACX,GAAD,UACE,eAAC,GAAD,WACE,sBAAMY,KAAK,MAAMC,aAAW,QAA5B,SACG,MAFL,aAOF,cAAC,EAAD,CAASzE,SAAS,OAAOJ,WAAYJ,EAAY3B,MAAOtH,YAAiBuN,QAE1EE,EAAmB,GAClB,eAACL,GAAD,WACE,cAACC,GAAD,UACE,cAAC,GAAD,uBAEF,cAAC,EAAD,CAAS5D,SAAS,OAAOJ,WAAYJ,EAAY3B,MAAOmG,EAAkBvN,SAAU,OAGlE,IAArBuN,GAA0BD,EAAkB,GAC3C,eAACJ,GAAD,WACE,cAACC,GAAD,UACE,cAAC,GAAD,qBAEF,cAAC,EAAD,CAAS5D,SAAS,OAAOJ,WAAYJ,EAAY3B,MAAOkG,EAAiBtN,SAAU,cASlFkF,OAAM+I,KAAKb,I,k2BCzE1B,IAsJMc,GAAmB/J,IAAOC,IAAV,MAWhB+J,GAAoBhK,IAAOC,IAAV,MAQjBgK,GAAqBjK,IAAOC,IAAV,MAOlBiK,GAAqBlK,IAAOC,IAAV,MACZ,SAACpC,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAChC,SAACxC,GAAD,OAAWA,EAAM2C,MAAMH,QAAQ,MAGpC8J,GAAgBnK,IAAOC,IAAV,MAKJmK,GA1L0B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExC1K,EAaE0K,EAbF1K,OACAuG,EAYEmE,EAZFnE,UACAoE,EAWED,EAXFC,iBACAC,EAUEF,EAVFE,oBACA/I,EASE6I,EATF7I,QACAgJ,EAQEH,EARFG,IACAC,EAOEJ,EAPFI,cACAvB,EAMEmB,EANFnB,YACAwB,EAKEL,EALFK,WACAC,EAIEN,EAJFM,SACA/F,EAGEyF,EAHFzF,WACAgG,EAEEP,EAFFO,SACAC,EACER,EADFQ,aAEI1H,EAAkB5H,cAClBuP,EAAuBC,YAASR,GAC9BtN,EAAYa,cAAZb,QACFuB,EAAQnC,cACN6C,EAAcQ,YAAeoL,EAAsBnL,GAAnDT,UACAyE,EAAYG,YAAanE,GAAzBgE,QACAY,EAAcD,YAAe3E,GAA7B4E,UACAhD,EAAaW,YAAevC,GAA5B4B,SAvB6C,EAyBHlD,oBAAS,GAzBN,mBAyB9C2M,EAzB8C,KAyB3BC,EAzB2B,OA0BnB5M,oBAAS,GA1BU,mBA0B9CgI,EA1B8C,KA0BnCC,GA1BmC,KA4B/ClJ,GAAY,IAAIrB,KAAkB,OAAR6O,QAAQ,IAARA,OAAA,EAAAA,EAAUxN,YAAa,GACjD8N,GAAsB,IAAInP,KAAkB,OAAR6O,QAAQ,IAARA,OAAA,EAAAA,EAAUM,sBAAuB,GACrEC,GAAgB,IAAIpP,KAAkB,OAAR6O,QAAQ,IAARA,OAAA,EAAAA,EAAUO,gBAAiB,GACzDhE,GAAW,IAAIpL,KAAkB,OAAR6O,QAAQ,IAARA,OAAA,EAAAA,EAAUQ,gBAAiB,GAEpDhC,GAAmBiC,KAAKxI,IAAI6H,EAAalM,EAAO,GAChD2K,GAAkBkC,KAAKxI,IAAI8H,EAAWnM,EAAO,GAC7C8M,IAAuC,OAAbH,SAAa,IAAbA,QAAA,EAAAA,GAAejP,YAAa,EACtDqP,IAAiBD,KAA4BlO,GAAUlB,WACvDsP,GAAe5G,GAAc0G,GAE7BG,GAAiB,IAAI1P,IAAU8O,GAAca,aAAa,IAAI3P,IAAU,IAAIE,IAAIwO,IAvCjC,GAwC1BkB,mBACzB,cAAC,EAAD,CACE9I,IAAKgI,GAAgBK,GAAoBtM,cAAc6M,IAAkBA,GAAiBP,GAC1FlF,UAAWrC,EACXuC,UAAW2E,EAAY,UAAMP,EAAN,aAA2BO,EAA3B,SAAiDP,KAJrEsB,GAxC8C,wBAgDzBD,mBAC1B,cAAC,EAAD,CAAexE,SAAUA,GAAUnB,UAAWrC,EAASuC,UAAWoE,KAD7DuB,GAhD8C,wBAoDzBF,mBAC1B,cAAC,EAAD,CAAe9I,IAAKsI,GAAenF,UAAWzB,EAAW2B,UAAWoE,KAD/DwB,GApD8C,qBAwD/CC,GAAgB5M,sBAAW,sBAAC,sBAAAjC,EAAA,sEAE9B+N,GAAqB,GAFS,SAGT/L,IAHS,eAK5B+L,GAAqB,GALO,gDAQ9B1L,QAAQC,MAAR,MAR8B,yDAU/B,CAACN,EAAW+L,IAEf,OACE,eAAC,EAAD,CAAMtD,SAAU6D,GAAc5G,WAAYA,EAA1C,UACGA,GAAc,cAACmF,GAAD,IACf,sBAAKL,MAAO,CAAE5B,QAAS,QAAvB,UACE,eAAC,EAAD,CAAWlD,WAAYA,EAAvB,UACGsB,EADH,IACe/C,EAAgB,IAAK,WAEpC,qBAAKuG,MAAO,CAAEC,aAAc,MAAOqC,QAAS,OAAQC,WAAY,UAAhE,SACGhP,GAAWuE,GACV,cAAC0K,GAAD,CACElF,UAAWG,GAASjL,YAAcmK,EAClCtL,KAAMsL,EAAY,aAAe,UACjClI,QAAO,sBAAE,sBAAAjB,EAAA,6DACPoJ,IAAa,GADN,SAED/E,IAFC,OAGP+E,IAAa,GAHN,+CAQf,eAAC2D,GAAD,WACE,cAAC,EAAD,CAAShH,MAAOtH,YAAiBwL,GAAUsD,GAAgBzF,WAAYJ,IACtE3H,GAAWuE,GACV,cAAC0K,GAAD,CACElF,UAAWG,GAASjL,YAAcmK,EAClCtL,KAAkBoI,EAAgB,IAA5BkD,EAAiC,cAAsC,YAC7ElI,QAAS0N,QAKf,cAAC,EAAD,CAAOjH,WAAYA,EAAY7J,KAAMoI,EAAgB,IAAD,UAAS+C,EAAT,cACpD,eAAC8D,GAAD,YACI/M,GAAW,cAACW,EAAA,EAAD,IACZX,IACEsO,GACC,qBAAK7B,MAAO,CAAEyC,KAAM,GAApB,SACE,cAAC,SAAD,CAAQnF,SAAUpC,GAAcoG,EAAmB7M,QAAS4N,GAAejF,WAAS,EAApF,2BACcwD,OAIhB,qCACE,cAAC,SAAD,CAAQtD,SAAUmE,GAAciB,GAAG,IAAIrQ,IAAU,KAAOsK,EAAWlI,QAAS2N,GAA5E,2BACcxB,KAEd,cAACJ,GAAD,IAEA,cAAC,aAAD,CAAYlD,SAAUpC,EAAYzG,QAASyN,GAA3C,SACE,cAAC,UAAD,CAAS3G,MAAM,wBAKzB,eAACkF,GAAD,WACE,sBAAKT,MAAO,CAAEyC,KAAM,GAApB,UAA0BhJ,EAAgB,IAAK,OAA/C,OACCyB,IAAe4F,IAAf,OAAsBA,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAK6B,YAAW,OAAC7B,QAAD,IAACA,OAAD,EAACA,EAAK8B,YAC3C,IAEA,cAAC,EAAD,CAASlH,SAAS,OAAOJ,WAAYJ,EAAY3B,MAAK,OAAEuH,QAAF,IAAEA,OAAF,EAAEA,EAAKtO,WAAYL,SAAU,EAAGwJ,KAAK,SAG/F,eAAC8E,GAAD,WACE,sBAAKT,MAAO,CAAEyC,KAAM,GAApB,UACE,sBAAMvC,KAAK,MAAMC,aAAYS,EAA7B,SACG,MAEFnH,EAAgB,IAAK,cAJxB,OAMA,cAAC,EAAD,CAASiC,SAAS,OAAOJ,WAAYJ,EAAY3B,MAAOtH,YAAiBwP,YAG7E,cAAC,GAAD,CACEjC,YAAaA,EACbC,gBAAiBA,GACjBvE,WAAYA,EACZwE,iBAAkBA,S,uKC3K1B,IAkBemD,GAlBQ,WAAO,IAAD,EACFC,cAAjBC,EADmB,EACnBA,IAAKC,EADc,EACdA,QACPvJ,EAAkB5H,cAExB,OACE,cAACoR,GAAD,UACE,eAAC,aAAD,CAAYC,YAAcF,EAAc,EAAJ,EAAOxM,KAAK,KAAK6G,QAAQ,SAA7D,UACE,cAAC,iBAAD,CAAgB8F,GAAI5E,KAAMM,GAAE,UAAKkE,GAAjC,SACGtJ,EAAgB,IAAK,YAExB,cAAC,iBAAD,CAAgB0J,GAAI5E,KAAMM,GAAE,UAAKkE,EAAL,YAA5B,SACGtJ,EAAgB,IAAK,oBAS1BwJ,GAAU3M,IAAOC,IAAV,MCgEE6M,GA1EQ,WAAO,IACpBC,EAASP,cAATO,KACA9P,EAAYa,cAAZb,QAEF+P,EAAQC,cACRC,EAAQC,YAASlQ,GACjBmQ,EAAcC,cACd7O,EAAQnC,cAaRiR,EAAeJ,EAAMhM,KAAI,SAACmJ,GAC9B,IAAMkD,EAAkBP,EAAMtS,MAAK,SAAC8S,GAAD,OAAOA,EAAEC,cAAgBpD,EAAKnE,aAC3DwH,EAAmBV,EAAMtS,MAAK,SAAC0F,GAAD,OAAOA,EAAEqN,cAAgBpD,EAAKC,oBAG5DqD,EAAyB,IAAI5R,IAAJ,OAAc2R,QAAd,IAAcA,OAAd,EAAcA,EAAkBE,mBAOzDC,EAvBW,SAAC3H,EAAmB4H,EAAuBC,GAC5D,IAAMC,EAAe,IAAIjS,IAAU+R,GACnC,MAAkB,QAAd5H,EACK,IAAInK,IAAU,GAEnB+R,GAAcC,IAAeE,IAAWC,KACnCF,EAAa/N,IAAImN,GAEnBY,EASuBG,CAC5B9D,EAAKnE,UADiC,OAEtCqH,QAFsC,IAEtCA,OAFsC,EAEtCA,EAAiBK,kBAFqB,OAGtCL,QAHsC,IAGtCA,OAHsC,EAGtCA,EAAiBa,kBAGmC5K,MAAM6G,EAAKgE,eAAe7K,MAAMY,KAChFkK,EAA0BX,EAAuBnK,MAAM7H,YAAiB0O,EAAKnB,cAC7EsB,EAAMqD,EAAwB5N,IAAIqO,GAAyB9K,MAAM,KAEvE,OAAO,2BACF6G,GADL,IAEEzF,WAAYyF,EAAKzF,YAAcpG,EAAQ6L,EAAKM,SAC5CH,WAvCuB,EA0CQ+D,IAAUjB,GAAc,SAACjD,GAAD,OAAUA,EAAKzF,cA1C/C,mBA0CpB4J,EA1CoB,KA0CLC,EA1CK,KA4C3B,OACE,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACE,8BACA,cAAC,UAAD,CAAS9B,GAAG,KAAK3M,KAAK,KAAK0O,GAAG,OAAOlF,MAAO,CAAEmF,UAAW,UAAzD,0BAIA,8BACE,cAAC,GAAD,SAGN,eAACF,EAAA,EAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAAC/B,KAAI,UAAKA,GAAtB,SACE,mCACG0B,EAAUvN,KAAI,SAACmJ,GAAD,OACb,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAK1K,eAI1B,cAAC,IAAD,CAAOoN,KAAI,UAAKA,EAAL,YAAX,SACGyB,EAActN,KAAI,SAACmJ,GAAD,OACjB,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAK1K","file":"static/js/8.9ec131c5.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getBalanceBig = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance\n}\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\nconst UnlockButton = (props) => {\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      Unlock Wallet\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance } from 'state/actions'\nimport { getAllowance } from 'utils/erc20'\nimport { approve } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js'\nimport { fetchFarmUserDataAsync } from '../state/farms'\nimport { useMasterchef, useSousChef } from './useContract'\nimport useBlock from './useBlock'\n\nexport const useAllowance = (lpContract: Contract, contract: Contract) => {\n  const [isApproved, setIsApproved] = useState(false)\n  const { account }: { account: string } = useWallet()\n  const block = useBlock()\n\n  useEffect(() => {\n    if (isApproved) return\n    getAllowance(lpContract, contract, account).then((x) => {\n      if (!account) return\n      const allowance = new BigNumber(x)\n      setIsApproved(allowance && allowance.isGreaterThan(0))\n    })\n  }, [account, contract, lpContract, block, isApproved])\n\n  return isApproved\n}\n\nexport const useApprove = (lpContract: Contract, amount?: BigNumber) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account, amount)\n\n      if (!amount)\n        dispatch(fetchFarmUserDataAsync(account))\n\n      return tx\n    } catch (e) {\n      console.error(e)\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, amount])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useContractApprove = (lpContract: Contract, contract: Contract) => {\n  const { account }: { account: string } = useWallet()\n  const handleApprove = useCallback(async () => {\n    try {\n      return await approve(lpContract, contract, account)\n    } catch (e) {\n      console.error(e)\n      return false\n    }\n  }, [account, lpContract, contract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleHarvest = useCallback(async () => {\n    await soushHarvest(sousChefContract, account)\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from 'uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, restake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\nimport { fetchFarmUserDataAsync } from '../state/farms'\n\nexport const useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\nexport const useReStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(async () => {\n    const txHash = await restake(masterChefContract, pid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    console.info(txHash)\n  }, [account, dispatch, masterChefContract, pid])\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await sousStake(sousChefContract, amount, account)\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { sousUnstake, unstake } from 'utils/callHelpers'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await sousUnstake(sousChefContract, amount, account)\n\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '../uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\n\ninterface Props {\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid '#E9EAEB';\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\n\nconst CardFooter: React.FC<Props> = ({ totalStaked, blocksRemaining, isFinished, blocksUntilStart }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  {' '}\n                </span>\n                Total\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>Start:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>End:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon } from 'uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    harvest,\n    apy,\n    tokenDecimals,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber()\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished}>\n      {isFinished && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished}>\n          {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        <BalanceAndCompound>\n          <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n              onClick={onPresentCompound}\n            />\n          )}\n        </BalanceAndCompound>\n\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx} onClick={onPresentWithdraw}>\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { QuoteToken } from 'config/constants/types'\nimport { Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport partition from 'lodash/partition'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceBnbBusd, usePools, useFarms } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n        <FlexLayout>\n          <div>\n          <Heading as=\"h1\" size=\"xl\" mb=\"30px\" style={{ textAlign: 'center' }}>\n              Mole Pools\n            </Heading>\n          </div>\n          <div>\n            <PoolTabButtons />\n          </div>\n        </FlexLayout>\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {openPools.map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {finishedPools.map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nexport default Farm\n"],"sourceRoot":""}